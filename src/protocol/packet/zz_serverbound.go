// Code generated by generation/gen.go. DO NOT EDIT.

package packet

import (
	"bytes"
	"gomc/src/protocol"
	"gomc/src/protocol/types"
)

func init() {
	serverbound[0][0] = func() SerializablePacket {
		return &ServerboundHandshake{}
	}
	serverbound[1][0] = func() SerializablePacket {
		return &ServerboundStatusRequest{}
	}
	serverbound[1][1] = func() SerializablePacket {
		return &ServerboundStatusPing{}
	}
	serverbound[2][0] = func() SerializablePacket {
		return &ServerboundLoginStart{}
	}
	serverbound[2][1] = func() SerializablePacket {
		return &ServerboundLoginEncryptionResponse{}
	}
}

func (p *ServerboundHandshake) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.ProtocolVersion.Marshal())
	buf.Write(p.ServerAddress.Marshal())
	buf.Write(p.ServerPort.Marshal())
	buf.Write(p.NextState.Marshal())
	return buf.Bytes()
}

func (p *ServerboundStatusRequest) Serialize() []byte {
	var buf bytes.Buffer
	return buf.Bytes()
}

func (p *ServerboundStatusPing) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.Payload.Marshal())
	return buf.Bytes()
}

func (p *ServerboundLoginStart) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.Username.Marshal())
	buf.Write(p.UUID.Marshal())
	return buf.Bytes()
}

func (p *ServerboundLoginEncryptionResponse) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.SharedSecret.Marshal())
	buf.Write(p.VerifyToken.Marshal())
	return buf.Bytes()
}

func (p *ServerboundHandshake) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.ProtocolVersion, _, err = types.ReadVarInt(r)
	if err != nil {
		return err
	}
	p.ServerAddress, _, err = types.ReadString(r)
	if err != nil {
		return err
	}
	p.ServerPort, _, err = types.ReadUShort(r)
	if err != nil {
		return err
	}
	p.NextState, _, err = types.ReadVarInt(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ServerboundStatusRequest) Deserialize(_ []byte) error {
	return nil
}

func (p *ServerboundStatusPing) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.Payload, _, err = types.ReadLong(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ServerboundLoginStart) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.Username, _, err = types.ReadString(r)
	if err != nil {
		return err
	}
	p.UUID, _, err = types.ReadUUID(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ServerboundLoginEncryptionResponse) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.SharedSecret, _, err = types.ReadByteBuf(r)
	if err != nil {
		return err
	}
	p.VerifyToken, _, err = types.ReadByteBuf(r)
	if err != nil {
		return err
	}
	return nil
}

func (*ServerboundHandshake) ID() int {
	return 0
}

func (*ServerboundStatusRequest) ID() int {
	return 0
}

func (*ServerboundStatusPing) ID() int {
	return 1
}

func (*ServerboundLoginStart) ID() int {
	return 0
}

func (*ServerboundLoginEncryptionResponse) ID() int {
	return 1
}

func (*ServerboundHandshake) State() protocol.State {
	return 0
}

func (*ServerboundStatusRequest) State() protocol.State {
	return 1
}

func (*ServerboundStatusPing) State() protocol.State {
	return 1
}

func (*ServerboundLoginStart) State() protocol.State {
	return 2
}

func (*ServerboundLoginEncryptionResponse) State() protocol.State {
	return 2
}
