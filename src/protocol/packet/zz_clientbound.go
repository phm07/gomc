// Code generated by generation/gen.go. DO NOT EDIT.

package packet

import (
	"bytes"
	"gomc/src/protocol"
	"gomc/src/protocol/types"
)

func (p *ClientboundStatusResponse) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.Json.Marshal())
	return buf.Bytes()
}

func (p *ClientboundStatusPong) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.Payload.Marshal())
	return buf.Bytes()
}

func (p *ClientboundLoginDisconnect) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.Reason.Marshal())
	return buf.Bytes()
}

func (p *ClientboundLoginEncryptionRequest) Serialize() []byte {
	var buf bytes.Buffer
	buf.Write(p.ServerID.Marshal())
	buf.Write(p.PublicKey.Marshal())
	buf.Write(p.VerifyToken.Marshal())
	return buf.Bytes()
}

func (p *ClientboundStatusResponse) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.Json, _, err = types.ReadString(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ClientboundStatusPong) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.Payload, _, err = types.ReadLong(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ClientboundLoginDisconnect) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.Reason, _, err = types.ReadString(r)
	if err != nil {
		return err
	}
	return nil
}

func (p *ClientboundLoginEncryptionRequest) Deserialize(b []byte) error {
	var err error
	r := bytes.NewReader(b)
	p.ServerID, _, err = types.ReadString(r)
	if err != nil {
		return err
	}
	p.PublicKey, _, err = types.ReadByteBuf(r)
	if err != nil {
		return err
	}
	p.VerifyToken, _, err = types.ReadByteBuf(r)
	if err != nil {
		return err
	}
	return nil
}

func (*ClientboundStatusResponse) ID() int {
	return 0
}

func (*ClientboundStatusPong) ID() int {
	return 1
}

func (*ClientboundLoginDisconnect) ID() int {
	return 0
}

func (*ClientboundLoginEncryptionRequest) ID() int {
	return 1
}

func (*ClientboundStatusResponse) State() protocol.State {
	return 1
}

func (*ClientboundStatusPong) State() protocol.State {
	return 1
}

func (*ClientboundLoginDisconnect) State() protocol.State {
	return 2
}

func (*ClientboundLoginEncryptionRequest) State() protocol.State {
	return 2
}
